package view

import (
	"fmt"
	"friend-cal-app/data"
	"friend-cal-app/utils"
	"strings"
	"strconv"
)

func getPercentageColor(p string) string {
	num, _ := strconv.Atoi(strings.TrimSuffix(p, "%"))

	if num >= 80 {
		return "#28a745" //green
	}
	if num >= 70 {
		return "#ffc107" //yellow
	}
	return "#dc3545" //red
}


templ OrganizerPage(event data.Event, eventUUID string, organizerURL string, guestURL string, user *data.User, 
					allUsers map[string]*data.User, formatPreference string, percentages map[string]string) {
	@layout("Organizer: " + event.Name, user) {
		<div style="display: flex; justify-content: space-between; align-items: center;">
			<div style="display: flex; align-items: baseline; gap: 0.5rem;">
				<h3 style="margin: 0;">Copy Link to Clipboard:</h3>
				<button id="copy-btn" onclick="copyGuestLink()" title="Copy link to clipboard" style="background:none; border:none; font-size:1.5rem; cursor:pointer; padding:0;">ðŸ“‹</button>
			</div>
			<a href={ "/event/" + eventUUID + "/edit" } class="button">Edit Event</a>
		</div>
		<p>
			<strong>Link to share:</strong>
			<a id="guest-link" href={ guestURL }>{ guestURL }</a>
		</p>

		<hr/>

		<h1>{ event.Name } - Poll Results</h1>
		if event.Location != "" {
    		<p><strong>Where:</strong> { event.Location }</p>
		}

		if event.StartTime != "" && event.EndTime != "" {
			<p><strong>Time:</strong> 
			{ utils.FormatTime(event.StartTime, formatPreference) } - { utils.FormatTime(event.EndTime, formatPreference) } 
			({ event.Timezone })</p>
		}
		if event.Description != "" {
			<p style="white-space: pre-wrap;">{ event.Description }</p>
		}
		<hr/>
		<div>
			<h4>Attendees:</h4>
			<ul>
				for _, attendee := range allUsers {
					<li style="display: flex; align-items: center; margin-bottom: 0.5rem;">
						if attendee.PhotoURL != "" {
							<img 
								src={ attendee.PhotoURL } 
								style="width: 50px; height: 50px; border-radius: 50%; margin-right: 8px;"
								referrerpolicy="no-referrer"	
								/>
						}
						<div>
							<div>{ attendee.Name }</div>
							<div style="font-size: 0.8rem; color: #777;">{ attendee.Email }</div>
						</div>
					</li>
				}
			</ul>
		</div>

		for _, date := range event.Dates {
			<div>
				<h3>{ date }</h3>
				if len(event.Votes[date]) > 0 {
					<p>
						{ fmt.Sprintf("%d vote(s)", len(event.Votes[date])) }
						if percentage, ok := percentages[date]; ok {
							<span style={ "font-weight: bold; color: " + getPercentageColor(percentage) + ";" }>(
								{ percentage }
							)</span>
						}
					</p>
					<ul>
						for _, voterID := range event.Votes[date] {
							if voter := allUsers[voterID]; voter != nil {
								<li style="display: flex; align-items: center; margin-bottom: 0.5rem;">
									if voter.PhotoURL != "" {
										<img 
											src={ voter.PhotoURL } 
											style="width: 50px; height: 50px; border-radius: 50%; margin-right: 8px;"
											referrerpolicy="no-referrer"	
											/>
									}
									<div>
										<div>{ voter.Name }</div>
										<div style="font-size: 0.8rem; color: #777;">{ voter.Email }</div>
									</div>
								</li>
							}
						}
					</ul>
				} else {
					<p>0 votes</p>
				}
			</div>
		}

		<hr/>

		<h2>Finalize Event</h2>
		<p>Select the winning date and send the invites.</p>
		<form action={ "/event/" + eventUUID + "/finalize" } method="post">
			<label for="finalDate">Select the final date:</label>
			<select name="finalDate" id="finalDate">
				for _, date := range event.Dates {
					<option value={ date }>{ date }</option>
				}
			</select>
			<button type="submit">Send Google Calendar Invites</button>
		</form>
		<hr/>

		<div style="margin-top: 2rem; border: 1px solid #d9534f; padding: 1rem; border-radius: 5px;">
			<h3 style="color: #d9534f;">Danger Zone</h3>
			<p>Deleting an event is permanent and cannot be undone.</p>
			<form action={ "/event/" + eventUUID + "/delete" } method="post" onsubmit="return confirm('Are you sure you want to permanently delete this event?');">
				<input type="hidden" name="csrf_token" value={ user.CSRFToken }/>
				<button type="submit" class="button" style="background-color: #d9534f; border-color: #d9534f;">Delete This Event</button>
			</form>
		</div>
	}
}